/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protobuf/discovery.proto */

#ifndef PROTOBUF_C_protobuf_2fdiscovery_2eproto__INCLUDED
#define PROTOBUF_C_protobuf_2fdiscovery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct CMsgRemoteClientBroadcastHeader CMsgRemoteClientBroadcastHeader;
typedef struct CMsgRemoteClientBroadcastStatus CMsgRemoteClientBroadcastStatus;
typedef struct CMsgRemoteClientBroadcastStatus__User CMsgRemoteClientBroadcastStatus__User;
typedef struct CMsgRemoteClientBroadcastDiscovery CMsgRemoteClientBroadcastDiscovery;
typedef struct CMsgRemoteClientBroadcastClientIDDeconflict CMsgRemoteClientBroadcastClientIDDeconflict;
typedef struct CMsgRemoteDeviceAuthorizationRequest CMsgRemoteDeviceAuthorizationRequest;
typedef struct CMsgRemoteDeviceAuthorizationRequest__CKeyEscrowTicket CMsgRemoteDeviceAuthorizationRequest__CKeyEscrowTicket;
typedef struct CMsgRemoteDeviceAuthorizationCancelRequest CMsgRemoteDeviceAuthorizationCancelRequest;
typedef struct CMsgRemoteDeviceAuthorizationResponse CMsgRemoteDeviceAuthorizationResponse;
typedef struct CMsgRemoteDeviceAuthorizationConfirmed CMsgRemoteDeviceAuthorizationConfirmed;
typedef struct CMsgRemoteDeviceStreamingRequest CMsgRemoteDeviceStreamingRequest;
typedef struct CMsgRemoteDeviceStreamingRequest__ReservedGamepad CMsgRemoteDeviceStreamingRequest__ReservedGamepad;
typedef struct CMsgRemoteDeviceStreamingCancelRequest CMsgRemoteDeviceStreamingCancelRequest;
typedef struct CMsgRemoteDeviceStreamingProgress CMsgRemoteDeviceStreamingProgress;
typedef struct CMsgRemoteDeviceStreamingResponse CMsgRemoteDeviceStreamingResponse;
typedef struct CMsgRemoteDeviceProofRequest CMsgRemoteDeviceProofRequest;
typedef struct CMsgRemoteDeviceProofResponse CMsgRemoteDeviceProofResponse;
typedef struct CMsgRemoteDeviceStreamTransportSignal CMsgRemoteDeviceStreamTransportSignal;


/* --- enums --- */

typedef enum _CMsgRemoteDeviceAuthorizationRequest__EKeyEscrowUsage {
  k_EKeyEscrowUsageStreamingDevice = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_REMOTE_DEVICE_AUTHORIZATION_REQUEST__EKEY_ESCROW_USAGE)
} CMsgRemoteDeviceAuthorizationRequest__EKeyEscrowUsage;
typedef enum _ERemoteClientBroadcastMsg {
  k_ERemoteClientBroadcastMsgDiscovery = 0,
  k_ERemoteClientBroadcastMsgStatus = 1,
  k_ERemoteClientBroadcastMsgOffline = 2,
  k_ERemoteDeviceAuthorizationRequest = 3,
  k_ERemoteDeviceAuthorizationResponse = 4,
  k_ERemoteDeviceStreamingRequest = 5,
  k_ERemoteDeviceStreamingResponse = 6,
  k_ERemoteDeviceProofRequest = 7,
  k_ERemoteDeviceProofResponse = 8,
  k_ERemoteDeviceAuthorizationCancelRequest = 9,
  k_ERemoteDeviceStreamingCancelRequest = 10,
  k_ERemoteClientBroadcastMsgClientIDDeconflict = 11,
  k_ERemoteDeviceStreamTransportSignal = 12,
  k_ERemoteDeviceStreamingProgress = 13,
  k_ERemoteDeviceAuthorizationConfirmed = 14
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EREMOTE_CLIENT_BROADCAST_MSG)
} ERemoteClientBroadcastMsg;
typedef enum _ERemoteClientService {
  k_ERemoteClientServiceNone = 0,
  k_ERemoteClientServiceRemoteControl = 1,
  k_ERemoteClientServiceGameStreaming = 2,
  k_ERemoteClientServiceSiteLicense = 4,
  k_ERemoteClientServiceContentCache = 8,
  k_ERemoteClientServiceContentServer = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EREMOTE_CLIENT_SERVICE)
} ERemoteClientService;
typedef enum _EVRLinkCaps {
  k_EVRLinkCapsUnknown = 0,
  k_EVRLinkCapsAvailable = 1,
  k_EVRLinkCapsUnimplemented = 2,
  k_EVRLinkCapsMissingHardwareEncoding = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EVRLINK_CAPS)
} EVRLinkCaps;
typedef enum _ERemoteDeviceAuthorizationResult {
  k_ERemoteDeviceAuthorizationSuccess = 0,
  k_ERemoteDeviceAuthorizationDenied = 1,
  k_ERemoteDeviceAuthorizationNotLoggedIn = 2,
  k_ERemoteDeviceAuthorizationOffline = 3,
  k_ERemoteDeviceAuthorizationBusy = 4,
  k_ERemoteDeviceAuthorizationInProgress = 5,
  k_ERemoteDeviceAuthorizationTimedOut = 6,
  k_ERemoteDeviceAuthorizationFailed = 7,
  k_ERemoteDeviceAuthorizationCanceled = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EREMOTE_DEVICE_AUTHORIZATION_RESULT)
} ERemoteDeviceAuthorizationResult;
typedef enum _EStreamDeviceFormFactor {
  k_EStreamDeviceFormFactorUnknown = 0,
  k_EStreamDeviceFormFactorPhone = 1,
  k_EStreamDeviceFormFactorTablet = 2,
  k_EStreamDeviceFormFactorComputer = 3,
  k_EStreamDeviceFormFactorTV = 4,
  k_EStreamDeviceFormFactorVRHeadset = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTREAM_DEVICE_FORM_FACTOR)
} EStreamDeviceFormFactor;
typedef enum _EStreamTransport {
  k_EStreamTransportNone = 0,
  k_EStreamTransportUDP = 1,
  k_EStreamTransportUDPRelay = 2,
  k_EStreamTransportWebRTC_OBSOLETE = 3,
  k_EStreamTransportSDR = 4,
  k_EStreamTransportUDP_SNS = 5,
  k_EStreamTransportUDPRelay_SNS = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTREAM_TRANSPORT)
} EStreamTransport;
typedef enum _EStreamInterface {
  k_EStreamInterfaceDefault = 0,
  k_EStreamInterfaceRecentGames = 1,
  k_EStreamInterfaceBigPicture = 2,
  k_EStreamInterfaceDesktop = 3,
  k_EStreamInterfaceSteamVR = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ESTREAM_INTERFACE)
} EStreamInterface;
typedef enum _ERemoteDeviceStreamingResult {
  k_ERemoteDeviceStreamingSuccess = 0,
  k_ERemoteDeviceStreamingUnauthorized = 1,
  k_ERemoteDeviceStreamingScreenLocked = 2,
  k_ERemoteDeviceStreamingFailed = 3,
  k_ERemoteDeviceStreamingBusy = 4,
  k_ERemoteDeviceStreamingInProgress = 5,
  k_ERemoteDeviceStreamingCanceled = 6,
  k_ERemoteDeviceStreamingDriversNotInstalled = 7,
  k_ERemoteDeviceStreamingDisabled = 8,
  k_ERemoteDeviceStreamingBroadcastingActive = 9,
  k_ERemoteDeviceStreamingVRActive = 10,
  k_ERemoteDeviceStreamingPINRequired = 11,
  k_ERemoteDeviceStreamingTransportUnavailable = 12,
  k_ERemoteDeviceStreamingInvisible = 13,
  k_ERemoteDeviceStreamingGameLaunchFailed = 14,
  k_ERemoteDeviceStreamingSteamVRNotInstalled = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EREMOTE_DEVICE_STREAMING_RESULT)
} ERemoteDeviceStreamingResult;

/* --- messages --- */

struct  CMsgRemoteClientBroadcastHeader
{
  ProtobufCMessage base;
  protobuf_c_boolean has_client_id;
  uint64_t client_id;
  protobuf_c_boolean has_msg_type;
  ERemoteClientBroadcastMsg msg_type;
  protobuf_c_boolean has_instance_id;
  uint64_t instance_id;
  protobuf_c_boolean has_device_id_obsolete;
  uint64_t device_id_obsolete;
  protobuf_c_boolean has_device_token;
  ProtobufCBinaryData device_token;
};
#define CMSG_REMOTE_CLIENT_BROADCAST_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_client_broadcast_header__descriptor) \
    , 0, 0, 0, k_ERemoteClientBroadcastMsgDiscovery, 0, 0, 0, 0, 0, {0,NULL} }


struct  CMsgRemoteClientBroadcastStatus__User
{
  ProtobufCMessage base;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_auth_key_id;
  uint32_t auth_key_id;
};
#define CMSG_REMOTE_CLIENT_BROADCAST_STATUS__USER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_client_broadcast_status__user__descriptor) \
    , 0, 0, 0, 0 }


struct  CMsgRemoteClientBroadcastStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean has_version;
  int32_t version;
  protobuf_c_boolean has_min_version;
  int32_t min_version;
  protobuf_c_boolean has_connect_port;
  uint32_t connect_port;
  char *hostname;
  protobuf_c_boolean has_enabled_services;
  uint32_t enabled_services;
  protobuf_c_boolean has_ostype;
  int32_t ostype;
  protobuf_c_boolean has_is64bit;
  protobuf_c_boolean is64bit;
  size_t n_users;
  CMsgRemoteClientBroadcastStatus__User **users;
  protobuf_c_boolean has_euniverse;
  int32_t euniverse;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_screen_locked;
  protobuf_c_boolean screen_locked;
  protobuf_c_boolean has_games_running;
  protobuf_c_boolean games_running;
  size_t n_mac_addresses;
  char **mac_addresses;
  protobuf_c_boolean has_download_lan_peer_group;
  uint32_t download_lan_peer_group;
  protobuf_c_boolean has_broadcasting_active;
  protobuf_c_boolean broadcasting_active;
  protobuf_c_boolean has_vr_active;
  protobuf_c_boolean vr_active;
  protobuf_c_boolean has_content_cache_port;
  uint32_t content_cache_port;
  size_t n_ip_addresses;
  char **ip_addresses;
  char *public_ip_address;
  protobuf_c_boolean has_remoteplay_active;
  protobuf_c_boolean remoteplay_active;
  protobuf_c_boolean has_supported_services;
  uint32_t supported_services;
  protobuf_c_boolean has_steam_deck;
  protobuf_c_boolean steam_deck;
  protobuf_c_boolean has_steam_version;
  uint64_t steam_version;
  protobuf_c_boolean has_vr_link_caps;
  EVRLinkCaps vr_link_caps;
};
#define CMSG_REMOTE_CLIENT_BROADCAST_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_client_broadcast_status__descriptor) \
    , 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0, 0, 0, 0, 0,NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, k_EVRLinkCapsUnknown }


struct  CMsgRemoteClientBroadcastDiscovery
{
  ProtobufCMessage base;
  protobuf_c_boolean has_seq_num;
  uint32_t seq_num;
  size_t n_client_ids;
  uint64_t *client_ids;
};
#define CMSG_REMOTE_CLIENT_BROADCAST_DISCOVERY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_client_broadcast_discovery__descriptor) \
    , 0, 0, 0,NULL }


struct  CMsgRemoteClientBroadcastClientIDDeconflict
{
  ProtobufCMessage base;
  size_t n_client_ids;
  uint64_t *client_ids;
};
#define CMSG_REMOTE_CLIENT_BROADCAST_CLIENT_IDDECONFLICT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_client_broadcast_client_iddeconflict__descriptor) \
    , 0,NULL }


struct  CMsgRemoteDeviceAuthorizationRequest__CKeyEscrowTicket
{
  ProtobufCMessage base;
  protobuf_c_boolean has_password;
  ProtobufCBinaryData password;
  protobuf_c_boolean has_identifier;
  uint64_t identifier;
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_usage;
  CMsgRemoteDeviceAuthorizationRequest__EKeyEscrowUsage usage;
  char *device_name;
  char *device_model;
  char *device_serial;
  protobuf_c_boolean has_device_provisioning_id;
  uint32_t device_provisioning_id;
};
#define CMSG_REMOTE_DEVICE_AUTHORIZATION_REQUEST__CKEY_ESCROW__TICKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_authorization_request__ckey_escrow__ticket__descriptor) \
    , 0, {0,NULL}, 0, 0, 0, {0,NULL}, 0, 0, 0, k_EKeyEscrowUsageStreamingDevice, NULL, NULL, NULL, 0, 0 }


struct  CMsgRemoteDeviceAuthorizationRequest
{
  ProtobufCMessage base;
  ProtobufCBinaryData device_token;
  char *device_name;
  ProtobufCBinaryData encrypted_request;
  protobuf_c_boolean has_auth_key;
  ProtobufCBinaryData auth_key;
};
#define CMSG_REMOTE_DEVICE_AUTHORIZATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_authorization_request__descriptor) \
    , {0,NULL}, NULL, {0,NULL}, 0, {0,NULL} }


struct  CMsgRemoteDeviceAuthorizationCancelRequest
{
  ProtobufCMessage base;
};
#define CMSG_REMOTE_DEVICE_AUTHORIZATION_CANCEL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_authorization_cancel_request__descriptor) \
     }


struct  CMsgRemoteDeviceAuthorizationResponse
{
  ProtobufCMessage base;
  ERemoteDeviceAuthorizationResult result;
  protobuf_c_boolean has_steamid;
  uint64_t steamid;
  protobuf_c_boolean has_auth_key;
  ProtobufCBinaryData auth_key;
  protobuf_c_boolean has_device_token;
  ProtobufCBinaryData device_token;
};
#define CMSG_REMOTE_DEVICE_AUTHORIZATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_authorization_response__descriptor) \
    , k_ERemoteDeviceAuthorizationSuccess, 0, 0, 0, {0,NULL}, 0, {0,NULL} }


struct  CMsgRemoteDeviceAuthorizationConfirmed
{
  ProtobufCMessage base;
  ERemoteDeviceAuthorizationResult result;
};
#define CMSG_REMOTE_DEVICE_AUTHORIZATION_CONFIRMED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_authorization_confirmed__descriptor) \
    , k_ERemoteDeviceAuthorizationSuccess }


struct  CMsgRemoteDeviceStreamingRequest__ReservedGamepad
{
  ProtobufCMessage base;
  protobuf_c_boolean has_controller_type;
  uint32_t controller_type;
  protobuf_c_boolean has_controller_subtype;
  uint32_t controller_subtype;
};
#define CMSG_REMOTE_DEVICE_STREAMING_REQUEST__RESERVED_GAMEPAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_streaming_request__reserved_gamepad__descriptor) \
    , 0, 0, 0, 0 }


struct  CMsgRemoteDeviceStreamingRequest
{
  ProtobufCMessage base;
  uint32_t request_id;
  protobuf_c_boolean has_maximum_resolution_x;
  int32_t maximum_resolution_x;
  protobuf_c_boolean has_maximum_resolution_y;
  int32_t maximum_resolution_y;
  protobuf_c_boolean has_audio_channel_count;
  int32_t audio_channel_count;
  char *device_version;
  protobuf_c_boolean has_stream_desktop;
  protobuf_c_boolean stream_desktop;
  protobuf_c_boolean has_device_token;
  ProtobufCBinaryData device_token;
  protobuf_c_boolean has_pin;
  ProtobufCBinaryData pin;
  protobuf_c_boolean has_enable_video_streaming;
  protobuf_c_boolean enable_video_streaming;
  protobuf_c_boolean has_enable_audio_streaming;
  protobuf_c_boolean enable_audio_streaming;
  protobuf_c_boolean has_enable_input_streaming;
  protobuf_c_boolean enable_input_streaming;
  protobuf_c_boolean has_network_test;
  protobuf_c_boolean network_test;
  protobuf_c_boolean has_client_id;
  uint64_t client_id;
  size_t n_supported_transport;
  EStreamTransport *supported_transport;
  protobuf_c_boolean has_restricted;
  protobuf_c_boolean restricted;
  protobuf_c_boolean has_form_factor;
  EStreamDeviceFormFactor form_factor;
  protobuf_c_boolean has_gamepad_count;
  int32_t gamepad_count;
  size_t n_gamepads;
  CMsgRemoteDeviceStreamingRequest__ReservedGamepad **gamepads;
  protobuf_c_boolean has_gameid;
  uint64_t gameid;
  protobuf_c_boolean has_stream_interface;
  EStreamInterface stream_interface;
};
#define CMSG_REMOTE_DEVICE_STREAMING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_streaming_request__descriptor) \
    , 0, 0, 0, 0, 0, 0, 2, NULL, 0, 0, 0, {0,NULL}, 0, {0,NULL}, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,NULL, 0, 0, 0, k_EStreamDeviceFormFactorUnknown, 0, 0, 0,NULL, 0, 0, 0, k_EStreamInterfaceDefault }


struct  CMsgRemoteDeviceStreamingCancelRequest
{
  ProtobufCMessage base;
  uint32_t request_id;
};
#define CMSG_REMOTE_DEVICE_STREAMING_CANCEL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_streaming_cancel_request__descriptor) \
    , 0 }


struct  CMsgRemoteDeviceStreamingProgress
{
  ProtobufCMessage base;
  uint32_t request_id;
  protobuf_c_boolean has_progress;
  float progress;
};
#define CMSG_REMOTE_DEVICE_STREAMING_PROGRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_streaming_progress__descriptor) \
    , 0, 0, 0 }


struct  CMsgRemoteDeviceStreamingResponse
{
  ProtobufCMessage base;
  uint32_t request_id;
  ERemoteDeviceStreamingResult result;
  protobuf_c_boolean has_port;
  uint32_t port;
  protobuf_c_boolean has_encrypted_session_key;
  ProtobufCBinaryData encrypted_session_key;
  protobuf_c_boolean has_transport;
  EStreamTransport transport;
  char *relay_server;
  char *cert;
};
#define CMSG_REMOTE_DEVICE_STREAMING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_streaming_response__descriptor) \
    , 0, k_ERemoteDeviceStreamingSuccess, 0, 0, 0, {0,NULL}, 0, k_EStreamTransportUDP, NULL, NULL }


struct  CMsgRemoteDeviceProofRequest
{
  ProtobufCMessage base;
  ProtobufCBinaryData challenge;
  protobuf_c_boolean has_request_id;
  uint32_t request_id;
  protobuf_c_boolean has_update_secret;
  protobuf_c_boolean update_secret;
};
#define CMSG_REMOTE_DEVICE_PROOF_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_proof_request__descriptor) \
    , {0,NULL}, 0, 0, 0, 0 }


struct  CMsgRemoteDeviceProofResponse
{
  ProtobufCMessage base;
  ProtobufCBinaryData response;
  protobuf_c_boolean has_request_id;
  uint32_t request_id;
  protobuf_c_boolean has_updated_secret;
  protobuf_c_boolean updated_secret;
};
#define CMSG_REMOTE_DEVICE_PROOF_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_proof_response__descriptor) \
    , {0,NULL}, 0, 0, 0, 0 }


struct  CMsgRemoteDeviceStreamTransportSignal
{
  ProtobufCMessage base;
  protobuf_c_boolean has_token;
  ProtobufCBinaryData token;
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
};
#define CMSG_REMOTE_DEVICE_STREAM_TRANSPORT_SIGNAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_remote_device_stream_transport_signal__descriptor) \
    , 0, {0,NULL}, 0, {0,NULL} }


/* CMsgRemoteClientBroadcastHeader methods */
void   cmsg_remote_client_broadcast_header__init
                     (CMsgRemoteClientBroadcastHeader         *message);
size_t cmsg_remote_client_broadcast_header__get_packed_size
                     (const CMsgRemoteClientBroadcastHeader   *message);
size_t cmsg_remote_client_broadcast_header__pack
                     (const CMsgRemoteClientBroadcastHeader   *message,
                      uint8_t             *out);
size_t cmsg_remote_client_broadcast_header__pack_to_buffer
                     (const CMsgRemoteClientBroadcastHeader   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteClientBroadcastHeader *
       cmsg_remote_client_broadcast_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_client_broadcast_header__free_unpacked
                     (CMsgRemoteClientBroadcastHeader *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteClientBroadcastStatus__User methods */
void   cmsg_remote_client_broadcast_status__user__init
                     (CMsgRemoteClientBroadcastStatus__User         *message);
/* CMsgRemoteClientBroadcastStatus methods */
void   cmsg_remote_client_broadcast_status__init
                     (CMsgRemoteClientBroadcastStatus         *message);
size_t cmsg_remote_client_broadcast_status__get_packed_size
                     (const CMsgRemoteClientBroadcastStatus   *message);
size_t cmsg_remote_client_broadcast_status__pack
                     (const CMsgRemoteClientBroadcastStatus   *message,
                      uint8_t             *out);
size_t cmsg_remote_client_broadcast_status__pack_to_buffer
                     (const CMsgRemoteClientBroadcastStatus   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteClientBroadcastStatus *
       cmsg_remote_client_broadcast_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_client_broadcast_status__free_unpacked
                     (CMsgRemoteClientBroadcastStatus *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteClientBroadcastDiscovery methods */
void   cmsg_remote_client_broadcast_discovery__init
                     (CMsgRemoteClientBroadcastDiscovery         *message);
size_t cmsg_remote_client_broadcast_discovery__get_packed_size
                     (const CMsgRemoteClientBroadcastDiscovery   *message);
size_t cmsg_remote_client_broadcast_discovery__pack
                     (const CMsgRemoteClientBroadcastDiscovery   *message,
                      uint8_t             *out);
size_t cmsg_remote_client_broadcast_discovery__pack_to_buffer
                     (const CMsgRemoteClientBroadcastDiscovery   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteClientBroadcastDiscovery *
       cmsg_remote_client_broadcast_discovery__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_client_broadcast_discovery__free_unpacked
                     (CMsgRemoteClientBroadcastDiscovery *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteClientBroadcastClientIDDeconflict methods */
void   cmsg_remote_client_broadcast_client_iddeconflict__init
                     (CMsgRemoteClientBroadcastClientIDDeconflict         *message);
size_t cmsg_remote_client_broadcast_client_iddeconflict__get_packed_size
                     (const CMsgRemoteClientBroadcastClientIDDeconflict   *message);
size_t cmsg_remote_client_broadcast_client_iddeconflict__pack
                     (const CMsgRemoteClientBroadcastClientIDDeconflict   *message,
                      uint8_t             *out);
size_t cmsg_remote_client_broadcast_client_iddeconflict__pack_to_buffer
                     (const CMsgRemoteClientBroadcastClientIDDeconflict   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteClientBroadcastClientIDDeconflict *
       cmsg_remote_client_broadcast_client_iddeconflict__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_client_broadcast_client_iddeconflict__free_unpacked
                     (CMsgRemoteClientBroadcastClientIDDeconflict *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceAuthorizationRequest__CKeyEscrowTicket methods */
void   cmsg_remote_device_authorization_request__ckey_escrow__ticket__init
                     (CMsgRemoteDeviceAuthorizationRequest__CKeyEscrowTicket         *message);
/* CMsgRemoteDeviceAuthorizationRequest methods */
void   cmsg_remote_device_authorization_request__init
                     (CMsgRemoteDeviceAuthorizationRequest         *message);
size_t cmsg_remote_device_authorization_request__get_packed_size
                     (const CMsgRemoteDeviceAuthorizationRequest   *message);
size_t cmsg_remote_device_authorization_request__pack
                     (const CMsgRemoteDeviceAuthorizationRequest   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_authorization_request__pack_to_buffer
                     (const CMsgRemoteDeviceAuthorizationRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceAuthorizationRequest *
       cmsg_remote_device_authorization_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_authorization_request__free_unpacked
                     (CMsgRemoteDeviceAuthorizationRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceAuthorizationCancelRequest methods */
void   cmsg_remote_device_authorization_cancel_request__init
                     (CMsgRemoteDeviceAuthorizationCancelRequest         *message);
size_t cmsg_remote_device_authorization_cancel_request__get_packed_size
                     (const CMsgRemoteDeviceAuthorizationCancelRequest   *message);
size_t cmsg_remote_device_authorization_cancel_request__pack
                     (const CMsgRemoteDeviceAuthorizationCancelRequest   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_authorization_cancel_request__pack_to_buffer
                     (const CMsgRemoteDeviceAuthorizationCancelRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceAuthorizationCancelRequest *
       cmsg_remote_device_authorization_cancel_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_authorization_cancel_request__free_unpacked
                     (CMsgRemoteDeviceAuthorizationCancelRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceAuthorizationResponse methods */
void   cmsg_remote_device_authorization_response__init
                     (CMsgRemoteDeviceAuthorizationResponse         *message);
size_t cmsg_remote_device_authorization_response__get_packed_size
                     (const CMsgRemoteDeviceAuthorizationResponse   *message);
size_t cmsg_remote_device_authorization_response__pack
                     (const CMsgRemoteDeviceAuthorizationResponse   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_authorization_response__pack_to_buffer
                     (const CMsgRemoteDeviceAuthorizationResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceAuthorizationResponse *
       cmsg_remote_device_authorization_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_authorization_response__free_unpacked
                     (CMsgRemoteDeviceAuthorizationResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceAuthorizationConfirmed methods */
void   cmsg_remote_device_authorization_confirmed__init
                     (CMsgRemoteDeviceAuthorizationConfirmed         *message);
size_t cmsg_remote_device_authorization_confirmed__get_packed_size
                     (const CMsgRemoteDeviceAuthorizationConfirmed   *message);
size_t cmsg_remote_device_authorization_confirmed__pack
                     (const CMsgRemoteDeviceAuthorizationConfirmed   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_authorization_confirmed__pack_to_buffer
                     (const CMsgRemoteDeviceAuthorizationConfirmed   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceAuthorizationConfirmed *
       cmsg_remote_device_authorization_confirmed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_authorization_confirmed__free_unpacked
                     (CMsgRemoteDeviceAuthorizationConfirmed *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceStreamingRequest__ReservedGamepad methods */
void   cmsg_remote_device_streaming_request__reserved_gamepad__init
                     (CMsgRemoteDeviceStreamingRequest__ReservedGamepad         *message);
/* CMsgRemoteDeviceStreamingRequest methods */
void   cmsg_remote_device_streaming_request__init
                     (CMsgRemoteDeviceStreamingRequest         *message);
size_t cmsg_remote_device_streaming_request__get_packed_size
                     (const CMsgRemoteDeviceStreamingRequest   *message);
size_t cmsg_remote_device_streaming_request__pack
                     (const CMsgRemoteDeviceStreamingRequest   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_streaming_request__pack_to_buffer
                     (const CMsgRemoteDeviceStreamingRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceStreamingRequest *
       cmsg_remote_device_streaming_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_streaming_request__free_unpacked
                     (CMsgRemoteDeviceStreamingRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceStreamingCancelRequest methods */
void   cmsg_remote_device_streaming_cancel_request__init
                     (CMsgRemoteDeviceStreamingCancelRequest         *message);
size_t cmsg_remote_device_streaming_cancel_request__get_packed_size
                     (const CMsgRemoteDeviceStreamingCancelRequest   *message);
size_t cmsg_remote_device_streaming_cancel_request__pack
                     (const CMsgRemoteDeviceStreamingCancelRequest   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_streaming_cancel_request__pack_to_buffer
                     (const CMsgRemoteDeviceStreamingCancelRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceStreamingCancelRequest *
       cmsg_remote_device_streaming_cancel_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_streaming_cancel_request__free_unpacked
                     (CMsgRemoteDeviceStreamingCancelRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceStreamingProgress methods */
void   cmsg_remote_device_streaming_progress__init
                     (CMsgRemoteDeviceStreamingProgress         *message);
size_t cmsg_remote_device_streaming_progress__get_packed_size
                     (const CMsgRemoteDeviceStreamingProgress   *message);
size_t cmsg_remote_device_streaming_progress__pack
                     (const CMsgRemoteDeviceStreamingProgress   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_streaming_progress__pack_to_buffer
                     (const CMsgRemoteDeviceStreamingProgress   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceStreamingProgress *
       cmsg_remote_device_streaming_progress__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_streaming_progress__free_unpacked
                     (CMsgRemoteDeviceStreamingProgress *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceStreamingResponse methods */
void   cmsg_remote_device_streaming_response__init
                     (CMsgRemoteDeviceStreamingResponse         *message);
size_t cmsg_remote_device_streaming_response__get_packed_size
                     (const CMsgRemoteDeviceStreamingResponse   *message);
size_t cmsg_remote_device_streaming_response__pack
                     (const CMsgRemoteDeviceStreamingResponse   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_streaming_response__pack_to_buffer
                     (const CMsgRemoteDeviceStreamingResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceStreamingResponse *
       cmsg_remote_device_streaming_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_streaming_response__free_unpacked
                     (CMsgRemoteDeviceStreamingResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceProofRequest methods */
void   cmsg_remote_device_proof_request__init
                     (CMsgRemoteDeviceProofRequest         *message);
size_t cmsg_remote_device_proof_request__get_packed_size
                     (const CMsgRemoteDeviceProofRequest   *message);
size_t cmsg_remote_device_proof_request__pack
                     (const CMsgRemoteDeviceProofRequest   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_proof_request__pack_to_buffer
                     (const CMsgRemoteDeviceProofRequest   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceProofRequest *
       cmsg_remote_device_proof_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_proof_request__free_unpacked
                     (CMsgRemoteDeviceProofRequest *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceProofResponse methods */
void   cmsg_remote_device_proof_response__init
                     (CMsgRemoteDeviceProofResponse         *message);
size_t cmsg_remote_device_proof_response__get_packed_size
                     (const CMsgRemoteDeviceProofResponse   *message);
size_t cmsg_remote_device_proof_response__pack
                     (const CMsgRemoteDeviceProofResponse   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_proof_response__pack_to_buffer
                     (const CMsgRemoteDeviceProofResponse   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceProofResponse *
       cmsg_remote_device_proof_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_proof_response__free_unpacked
                     (CMsgRemoteDeviceProofResponse *message,
                      ProtobufCAllocator *allocator);
/* CMsgRemoteDeviceStreamTransportSignal methods */
void   cmsg_remote_device_stream_transport_signal__init
                     (CMsgRemoteDeviceStreamTransportSignal         *message);
size_t cmsg_remote_device_stream_transport_signal__get_packed_size
                     (const CMsgRemoteDeviceStreamTransportSignal   *message);
size_t cmsg_remote_device_stream_transport_signal__pack
                     (const CMsgRemoteDeviceStreamTransportSignal   *message,
                      uint8_t             *out);
size_t cmsg_remote_device_stream_transport_signal__pack_to_buffer
                     (const CMsgRemoteDeviceStreamTransportSignal   *message,
                      ProtobufCBuffer     *buffer);
CMsgRemoteDeviceStreamTransportSignal *
       cmsg_remote_device_stream_transport_signal__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_remote_device_stream_transport_signal__free_unpacked
                     (CMsgRemoteDeviceStreamTransportSignal *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CMsgRemoteClientBroadcastHeader_Closure)
                 (const CMsgRemoteClientBroadcastHeader *message,
                  void *closure_data);
typedef void (*CMsgRemoteClientBroadcastStatus__User_Closure)
                 (const CMsgRemoteClientBroadcastStatus__User *message,
                  void *closure_data);
typedef void (*CMsgRemoteClientBroadcastStatus_Closure)
                 (const CMsgRemoteClientBroadcastStatus *message,
                  void *closure_data);
typedef void (*CMsgRemoteClientBroadcastDiscovery_Closure)
                 (const CMsgRemoteClientBroadcastDiscovery *message,
                  void *closure_data);
typedef void (*CMsgRemoteClientBroadcastClientIDDeconflict_Closure)
                 (const CMsgRemoteClientBroadcastClientIDDeconflict *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceAuthorizationRequest__CKeyEscrowTicket_Closure)
                 (const CMsgRemoteDeviceAuthorizationRequest__CKeyEscrowTicket *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceAuthorizationRequest_Closure)
                 (const CMsgRemoteDeviceAuthorizationRequest *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceAuthorizationCancelRequest_Closure)
                 (const CMsgRemoteDeviceAuthorizationCancelRequest *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceAuthorizationResponse_Closure)
                 (const CMsgRemoteDeviceAuthorizationResponse *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceAuthorizationConfirmed_Closure)
                 (const CMsgRemoteDeviceAuthorizationConfirmed *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceStreamingRequest__ReservedGamepad_Closure)
                 (const CMsgRemoteDeviceStreamingRequest__ReservedGamepad *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceStreamingRequest_Closure)
                 (const CMsgRemoteDeviceStreamingRequest *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceStreamingCancelRequest_Closure)
                 (const CMsgRemoteDeviceStreamingCancelRequest *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceStreamingProgress_Closure)
                 (const CMsgRemoteDeviceStreamingProgress *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceStreamingResponse_Closure)
                 (const CMsgRemoteDeviceStreamingResponse *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceProofRequest_Closure)
                 (const CMsgRemoteDeviceProofRequest *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceProofResponse_Closure)
                 (const CMsgRemoteDeviceProofResponse *message,
                  void *closure_data);
typedef void (*CMsgRemoteDeviceStreamTransportSignal_Closure)
                 (const CMsgRemoteDeviceStreamTransportSignal *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    eremote_client_broadcast_msg__descriptor;
extern const ProtobufCEnumDescriptor    eremote_client_service__descriptor;
extern const ProtobufCEnumDescriptor    evrlink_caps__descriptor;
extern const ProtobufCEnumDescriptor    eremote_device_authorization_result__descriptor;
extern const ProtobufCEnumDescriptor    estream_device_form_factor__descriptor;
extern const ProtobufCEnumDescriptor    estream_transport__descriptor;
extern const ProtobufCEnumDescriptor    estream_interface__descriptor;
extern const ProtobufCEnumDescriptor    eremote_device_streaming_result__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_client_broadcast_header__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_client_broadcast_status__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_client_broadcast_status__user__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_client_broadcast_discovery__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_client_broadcast_client_iddeconflict__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_authorization_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_authorization_request__ckey_escrow__ticket__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_remote_device_authorization_request__ekey_escrow_usage__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_authorization_cancel_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_authorization_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_authorization_confirmed__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_streaming_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_streaming_request__reserved_gamepad__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_streaming_cancel_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_streaming_progress__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_streaming_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_proof_request__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_proof_response__descriptor;
extern const ProtobufCMessageDescriptor cmsg_remote_device_stream_transport_signal__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protobuf_2fdiscovery_2eproto__INCLUDED */
